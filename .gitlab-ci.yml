stages:
  - build
  - deploy
build-drupal:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - |
      if [ -z "$CI_REGISTRY" ] || [ -z "$CI_REGISTRY_USER" ] || [ -z "$CI_REGISTRY_PASSWORD" ]; then
        echo "ERROR: Missing registry credentials variables"
        exit 1
      fi
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo "Building Drupal image..."
    - docker compose build drupal
  after_script:
    - echo "DONE DRUPAL"
  tags:
    - production
build-next:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo "Building Next.js"
    - docker compose build next
    - docker compose logs | tee -a docker-compose.log
    - docker compose push drupal next
  artifacts:
    when: always
    paths:
      - docker-compose.log
    expire_in: 1 week
  tags:
    - production
  only:
    - main
clean:
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo "Cleaning up Docker resources..."
    - docker system prune -af --volumes || true
  only:
    - main
  tags:
    - production
deploy:
  stage: deploy
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd /var/www/haohub
    - echo "Pulling images..."
    - docker compose pull next drupal
    - docker compose up -d drupal mariadb
    - docker exec drupal vendor/bin/drush cim -y
    - docker exec drupal vendor/bin/drush updb -y
    - docker exec drupal vendor/bin/drush cr
    - docker compose up -d next
  only:
    - main
  environment:
    name: production
    url: https://$DOMAIN
  tags:
    - production
